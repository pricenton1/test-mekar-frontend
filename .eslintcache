[{"E:\\ngoding\\test_api_client-development\\src\\index.js":"1","E:\\ngoding\\test_api_client-development\\src\\redux\\store\\store.js":"2","E:\\ngoding\\test_api_client-development\\src\\reportWebVitals.js":"3","E:\\ngoding\\test_api_client-development\\src\\containers\\home\\HomeContainer.js":"4","E:\\ngoding\\test_api_client-development\\src\\containers\\user\\UserForm.js":"5","E:\\ngoding\\test_api_client-development\\src\\api\\UserService.js":"6","E:\\ngoding\\test_api_client-development\\src\\component\\ButtonComponent.js":"7","E:\\ngoding\\test_api_client-development\\src\\component\\LoadingComponent.js":"8","E:\\ngoding\\test_api_client-development\\src\\App.js":"9","E:\\ngoding\\test-mekar-frontend\\src\\App.js":"10","E:\\ngoding\\test-mekar-frontend\\src\\redux\\reducer\\RootReducer.js":"11","E:\\ngoding\\test-mekar-frontend\\src\\containers\\auth\\Auth.js":"12","E:\\ngoding\\test-mekar-frontend\\src\\containers\\user\\UserList.js":"13","E:\\ngoding\\test-mekar-frontend\\src\\containers\\auth\\AuthForm.js":"14","E:\\ngoding\\test-mekar-frontend\\src\\component\\InputComponent.js":"15","E:\\ngoding\\test-mekar-frontend\\src\\component\\LoadingComponent.js":"16","E:\\ngoding\\test-mekar-frontend\\src\\component\\HeaderComponent.js":"17","E:\\ngoding\\test-mekar-frontend\\src\\reportWebVitals.js":"18","E:\\ngoding\\test-mekar-frontend\\src\\containers\\user\\UserForm.js":"19","E:\\ngoding\\test-mekar-frontend\\src\\redux\\action\\Education.js":"20","E:\\ngoding\\test-mekar-frontend\\src\\index.js":"21","E:\\ngoding\\test-mekar-frontend\\src\\redux\\store\\store.js":"22","E:\\ngoding\\test-mekar-frontend\\src\\routes.js":"23","E:\\ngoding\\test-mekar-frontend\\src\\component\\ButtonComponent.js":"24","E:\\ngoding\\test-mekar-frontend\\src\\component\\AlertComponent.js":"25","E:\\ngoding\\test-mekar-frontend\\src\\api\\AuthService.js":"26","E:\\ngoding\\test-mekar-frontend\\src\\api\\UserService.js":"27","E:\\ngoding\\test-mekar-frontend\\src\\containers\\user\\UserContainer.js":"28","E:\\ngoding\\test-mekar-frontend\\src\\redux\\action\\User.js":"29","E:\\ngoding\\test-mekar-frontend\\src\\redux\\reducer\\user\\UserReducer.js":"30","E:\\ngoding\\test-mekar-frontend\\src\\redux\\action\\Job.js":"31","E:\\ngoding\\test-mekar-frontend\\src\\component\\TablePaging.js":"32","E:\\ngoding\\test-mekar-frontend\\src\\containers\\home\\HomeContainer.js":"33","E:\\ngoding\\test-mekar-frontend\\src\\redux\\reducer\\user\\index.js":"34"},{"size":640,"mtime":1606828756000,"results":"35","hashOfConfig":"36"},{"size":139,"mtime":1606828756000,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1606828756000,"results":"38","hashOfConfig":"36"},{"size":532,"mtime":1606828756000,"results":"39","hashOfConfig":"36"},{"size":6689,"mtime":1606828756000,"results":"40","hashOfConfig":"36"},{"size":1921,"mtime":1606828756000,"results":"41","hashOfConfig":"36"},{"size":299,"mtime":1606828756000,"results":"42","hashOfConfig":"36"},{"size":303,"mtime":1606828756000,"results":"43","hashOfConfig":"36"},{"size":246,"mtime":1606828756000,"results":"44","hashOfConfig":"36"},{"size":366,"mtime":1614620372615,"results":"45","hashOfConfig":"46"},{"size":173,"mtime":1606828756000,"results":"47","hashOfConfig":"46"},{"size":328,"mtime":1614749371171,"results":"48","hashOfConfig":"46"},{"size":2115,"mtime":1614619060771,"results":"49","hashOfConfig":"46"},{"size":6523,"mtime":1614749836541,"results":"50","hashOfConfig":"46"},{"size":603,"mtime":1606828756000,"results":"51","hashOfConfig":"46"},{"size":303,"mtime":1614530847745,"results":"52","hashOfConfig":"46"},{"size":1489,"mtime":1614619642089,"results":"53","hashOfConfig":"46"},{"size":362,"mtime":1606828756000,"results":"54","hashOfConfig":"46"},{"size":6877,"mtime":1614616353555,"results":"55","hashOfConfig":"46"},{"size":115,"mtime":1606828756000,"results":"56","hashOfConfig":"46"},{"size":640,"mtime":1606828756000,"results":"57","hashOfConfig":"46"},{"size":139,"mtime":1606828756000,"results":"58","hashOfConfig":"46"},{"size":2063,"mtime":1614748809126,"results":"59","hashOfConfig":"46"},{"size":299,"mtime":1606828756000,"results":"60","hashOfConfig":"46"},{"size":244,"mtime":1614749724082,"results":"61","hashOfConfig":"46"},{"size":373,"mtime":1614748905391,"results":"62","hashOfConfig":"46"},{"size":1990,"mtime":1614612224692,"results":"63","hashOfConfig":"46"},{"size":6302,"mtime":1614655527911,"results":"64","hashOfConfig":"46"},{"size":105,"mtime":1614572083361,"results":"65","hashOfConfig":"46"},{"size":464,"mtime":1614580615747,"results":"66","hashOfConfig":"46"},{"size":103,"mtime":1606828756000,"results":"67","hashOfConfig":"46"},{"size":2204,"mtime":1614584523456,"results":"68","hashOfConfig":"46"},{"size":525,"mtime":1614654673226,"results":"69","hashOfConfig":"46"},{"size":151,"mtime":1606828756000,"results":"70","hashOfConfig":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1gpb530",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xfotpt",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"E:\\ngoding\\test_api_client-development\\src\\index.js",[],["147","148"],"E:\\ngoding\\test_api_client-development\\src\\redux\\store\\store.js",[],"E:\\ngoding\\test_api_client-development\\src\\reportWebVitals.js",[],"E:\\ngoding\\test_api_client-development\\src\\containers\\home\\HomeContainer.js",[],"E:\\ngoding\\test_api_client-development\\src\\containers\\user\\UserForm.js",["149"],"E:\\ngoding\\test_api_client-development\\src\\api\\UserService.js",[],"E:\\ngoding\\test_api_client-development\\src\\component\\ButtonComponent.js",[],"E:\\ngoding\\test_api_client-development\\src\\component\\LoadingComponent.js",[],"E:\\ngoding\\test_api_client-development\\src\\App.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\App.js",["150","151"],"E:\\ngoding\\test-mekar-frontend\\src\\redux\\reducer\\RootReducer.js",[],["152","153"],"E:\\ngoding\\test-mekar-frontend\\src\\containers\\auth\\Auth.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\containers\\user\\UserList.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\containers\\auth\\AuthForm.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\component\\InputComponent.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\component\\LoadingComponent.js",[],["154","155"],"E:\\ngoding\\test-mekar-frontend\\src\\component\\HeaderComponent.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\reportWebVitals.js",[],["156","157"],"E:\\ngoding\\test-mekar-frontend\\src\\containers\\user\\UserForm.js",["158"],"import React, {useEffect, useRef, useState} from 'react';\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport InputComponent from \"../../component/InputComponent\";\nimport ButtonComponent from \"../../component/ButtonComponent\";\nimport {connect} from \"react-redux\";\n\nconst UserForm = (props) => {\n\n    const {formType, editedData,errorData, show, hide, jobs, education} = props\n    const [userInput, setUserInput] = useState({\n        userNIK: \"\",\n        userName: \"\",\n        userBirth: \"\",\n        job: \"\",\n        education: \"\"\n    })\n\n    const validationForm = () => {\n        return (userInput.userNIK !== \"\" && userInput.userName !== \"\" && userInput.userBirth !== \"\" && userInput.job !== \"\" && userInput.education !== \"\")\n    }\n\n    const handleChangeInput = (name, value) => {\n        setUserInput({\n            ...userInput,\n            [name]: value\n        })\n    }\n\n    const reset = () => {\n        setUserInput({\n            ...userInput,\n            userNIK: \"\",\n            userName: \"\",\n            userBirth: \"\",\n            job: \"\",\n            education: \"\"\n        })\n    }\n\n    const usePrevious = (value) => {\n        const ref = useRef();\n        useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    }\n\n    const handleSubmit = (formType, id) => {\n        let user = {\n            userNIK: userInput.userNIK,\n            userName: userInput.userName.toUpperCase(),\n            userBirth: userInput.userBirth,\n            userJob: {\n                jobID: userInput.job\n            },\n            userEducation: {\n                educationID: userInput.education\n            }\n        }\n\n        if (formType === \"Create\") {\n            props.create(user)\n        } else {\n            props.update(id, user)\n        }\n        reset()\n    }\n\n    const prevEditedData = usePrevious({editedData});\n    useEffect(() => {\n        if (prevEditedData !== editedData && Object.keys(editedData).length !== 0) {\n            setUserInput({\n                ...userInput,\n                userNIK: editedData.userNIK,\n                userName: editedData.userName,\n                userBirth: editedData.userBirth,\n                job: editedData.userJob.jobID,\n                education: editedData.userEducation.educationID\n            })\n        } else {\n            reset()\n        }\n    }, [editedData])\n\n    return (\n        <Modal show={show}>\n            <Modal.Header>\n                <Modal.Title>{formType} User</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form id=\"form\">\n                    <InputComponent\n                        inputType={\"number\"}\n                        inputName={\"setuserNIK\"}\n                        inputLabel={\"Nomor KTP\"}\n                        value={userInput.userNIK}\n                        disable={formType === \"Detail\"}\n                        inputPlaceholder={\"Masukkan Nomor KTP (maximum 16 digit)\"}\n                        onChange={e => {\n                            handleChangeInput(\"userNIK\", e.target.value)\n                        }}\n                    />\n                    <div className=\"container-error\">\n                        <small className=\"text-danger\">{errorData.errors === undefined ?\"\":errorData.errors.userNIK === undefined ? \"\":errorData.errors.userNIK}</small>\n                    </div>\n                    <InputComponent\n                        inputType={\"text\"}\n                        inputName={\"setuserName\"}\n                        inputLabel={\"Nama Lengkap\"}\n                        value={userInput.userName}\n                        disable={formType === \"Detail\"}\n                        inputPlaceholder={\"Masukkan Nama Lengkap\"}\n                        onChange={e => {\n                            handleChangeInput(\"userName\", e.target.value)\n                        }}\n                    />\n                    <Form.Group>\n                        <Form.Label>Tanggal Lahir</Form.Label>\n                        <Form.Control\n                            disabled={formType === \"Detail\"}\n                            type=\"date\"\n                            value={userInput.userBirth}\n                            onChange={e => handleChangeInput(\"userBirth\", e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Pekerjaan</Form.Label>\n                        <Form.Control\n                            disabled={formType === \"Detail\"}\n                            as=\"select\" size=\"md\"\n                            value={userInput.job}\n                            onChange={e => {handleChangeInput(\"job\", e.target.value)}}>\n                            <option value=\"\" disabled selected >-- Pilih Pekerjaan --</option>\n                                {jobs.map((val) => {\n                                    return (\n                                        <option value={val.jobID} key={val.jobID}>\n                                            {val.jobLabel}\n                                        </option>\n                                    )\n                                })}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Pendidikan Terakhir</Form.Label>\n                        <Form.Control\n                            disabled={formType === \"Detail\"}\n                            as=\"select\" size=\"md\"\n                            value={userInput.education}\n                            onChange={e => {handleChangeInput(\"education\", e.target.value)}}>\n                            <option value=\"\" disabled selected >-- Pilih Pendidikan --</option>\n                                {education.map((val) => {\n                                    return (\n                                        <option value={val.educationID} key={val.educationID}>\n                                            {val.educationLabel}\n                                        </option>)\n                                })}\n                        </Form.Control>\n                    </Form.Group>\n\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                {formType === \"Detail\" ? \"\" :\n                    <ButtonComponent\n                        btnLabel={formType}\n                        validation={validationForm()}\n                        click={() => handleSubmit(formType, editedData.userID)}\n                    />\n                }\n                <Button variant=\"primary\" onClick={hide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        jobs: state.userReducer.user.jobs,\n        education: state.userReducer.user.education\n    }\n}\n\nexport default connect(mapStateToProps, null)(UserForm);","E:\\ngoding\\test-mekar-frontend\\src\\redux\\action\\Education.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\index.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\redux\\store\\store.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\routes.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\component\\ButtonComponent.js",[],["159","160"],"E:\\ngoding\\test-mekar-frontend\\src\\component\\AlertComponent.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\api\\AuthService.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\api\\UserService.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\containers\\user\\UserContainer.js",["161","162"],"import React, {useEffect, useState} from 'react';\nimport {deleteUser, getEducation, getJobs, getUser, postUser, updateUser} from '../../api/UserService'\nimport {setListUser} from \"../../redux/action/User\";\nimport {connect} from \"react-redux\";\nimport UserList from \"./UserList\";\nimport {Button, Container} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlusCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport Swal from \"sweetalert2\";\nimport UserForm from \"./UserForm\";\nimport {setListJob} from \"../../redux/action/Job\";\nimport {setListEducation} from \"../../redux/action/Education\";\nimport {showAlert} from \"../../component/AlertComponent\";\nimport TablePaging from \"../../component/TablePaging\";\n\nconst UserContainer = (props) => {\n\n    const [showDetail, setShowDetail] = useState(false)\n    const [formType, setFormType] = useState(\"\")\n    const [selectedData, setSelectedData] = useState({})\n    const [dataError,setDataError] = useState({})\n    const[page,setPage] = useState(1);\n    const[limit,setLimit] = useState(5);\n    const[keyword,setKeyword] = useState(\"\");\n\n    const loadData = () => {\n        getUser(keyword,page,limit,sessionStorage.getItem('token')).then((result) => {\n            if (result.statusCode === 200){\n                props.setListUser(result.payload)\n            }\n        })\n    }\n\n    const loadJobsData = () => {\n        getJobs(sessionStorage.getItem('token')).then((result) => {\n            props.setListJobs(result.payload)\n        })\n    }\n\n    const loadEducationData = () => {\n        getEducation(sessionStorage.getItem('token')).then((result) => {\n            props.setListEducation(result.payload)\n        })\n    }\n\n    useEffect(() => {\n        loadData()\n        loadJobsData()\n        loadEducationData()\n    },// eslint-disable-next-line\n        [page])\n\n\n    const createData = (value) => {\n        postUser(value,sessionStorage.getItem('token')).then((response) => {\n            if (response.statusCode === 201) {\n                showAlert('success', 'Successfull Insert User')\n                setSelectedData({})\n                setDataError({})\n                setShowDetail(!showDetail)\n                loadData()\n            }\n        }).catch((error) => {\n            if(error.response.data.statusCode === 400){\n                setSelectedData(error.response.data.payload)\n                setDataError(error.response.data.payload)\n            }else{\n                showAlert('error', 'Error Insert User')\n                setShowDetail(!showDetail)\n            }\n        })\n    }\n\n    const updateData = (id, value) => {\n        updateUser(id, value,sessionStorage.getItem('token')).then((response) => {\n            if (response.statusCode === 200) {\n                showAlert('success', 'Successfull Update User')\n                setSelectedData({})\n                setDataError({})\n                setShowDetail(!showDetail)\n            }\n            loadData()\n        }).catch((error) => {\n            if(error.response.data.statusCode === 400){\n                setSelectedData(error.response.data.payload)\n                setDataError(error.response.data.payload)\n            }else{\n                showAlert('error', 'Error Update User')\n                setShowDetail(!showDetail)\n            }\n        })\n    }\n\n\n    const deleteData = (id) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.value) {\n                deleteUser(id,sessionStorage.getItem('token')).then((response) => {\n                    if (response.statusCode === 200) {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your file has been deleted.',\n                            'success'\n                        ).then(r => r.dismiss)\n                        loadData()\n                    }\n                }).catch(() => {\n                    Swal.fire(\n                        'Error!',\n                        'Error Deleted File',\n                        'error'\n                    ).then(r => r.dismiss)\n                })\n            }\n        })\n    }\n\n    const showModals = (formType, value) => {\n        if (formType === \"Create\") {\n            value = {}\n        }\n        setShowDetail(!showDetail)\n        setSelectedData(value)\n        setFormType(formType)\n    }\n\n    const hideDetail = () => {\n        setShowDetail(!showDetail)\n        setSelectedData({})\n        setDataError({})\n    }\n\n\n    return (\n        <Container>\n            <div className=\"table-bordered container-table mt-5\">\n                <UserForm\n                    formType={formType}\n                    editedData={selectedData}\n                    errorData={dataError}\n                    create={(menu) => createData(menu)}\n                    update={(menuId, menu) => updateData(menuId, menu)}\n                    show={showDetail}\n                    hide={() => hideDetail()}\n                />\n                <div className=\"container-action\">\n                    <Button variant=\"outline-primary\" onClick={() => showModals(\"Create\")}>\n                        <FontAwesomeIcon icon={faPlusCircle} className=\"mr-2\"/>Add User\n                    </Button>\n                </div>\n                <div className=\"container-list\">\n                    <UserList\n                        edited={(value) => showModals(\"Edit\", value)}\n                        showDetail={(value) => showModals(\"Detail\", value)}\n                        deleted={(id) => deleteData(id)}\n                    />\n                </div>\n                <div className=\"container-pagination\">\n                    <div className=\"container-pagination\">\n                        <TablePaging getUsers={getUser} page={page} setPage={setPage} />\n                    </div>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nconst mapDispatchToProps = {\n    setListUser: setListUser,\n    setListJobs: setListJob,\n    setListEducation: setListEducation,\n}\n\nexport default connect(null, mapDispatchToProps)(UserContainer);","E:\\ngoding\\test-mekar-frontend\\src\\redux\\action\\User.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\redux\\reducer\\user\\UserReducer.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\redux\\action\\Job.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\component\\TablePaging.js",["163"],"import React, { Component } from 'react';\r\nimport {Pagination } from 'react-bootstrap';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst TablePaging = (props) => {\r\n        const {page,setPage,users} = props\r\n        return (\r\n            <div>\r\n                <Pagination>\r\n                    <Pagination.First\r\n                        disabled={page === 1 ? true : false}\r\n                        onClick={() => setPage(page - 1 )} \r\n                    />\r\n\r\n                    <Pagination.Prev\r\n                        disabled={page === 1 ? true : false}\r\n                        onClick={() => setPage(page - 1 )}\r\n                    />\r\n\r\n                    {page < 3 ? null : (\r\n                        <Pagination.Item onClick={() => setPage(page - 2 )}>\r\n                            {page - 2}\r\n                        </Pagination.Item>\r\n                    )}\r\n                    {page < 2 ? null : (\r\n                        <Pagination.Item onClick={() => setPage(page - 1 )}>\r\n                            {page - 1}\r\n                        </Pagination.Item>\r\n                    )}\r\n\r\n                    <Pagination.Item active>{page}</Pagination.Item>\r\n\r\n                    <Pagination.Item\r\n                        disabled={users.length < 5 ? true : false} \r\n                        onClick={() => setPage(page + 1 )}>\r\n                        {page + 1}\r\n                    </Pagination.Item>\r\n                    <Pagination.Item\r\n                        disabled={users.length < 5 ? true : false} \r\n                        onClick={() => setPage(page + 2 )}>\r\n                        {page + 2}\r\n                    </Pagination.Item>\r\n                        <Pagination.Next\r\n                        disabled={users.length < 5 ? true : false} \r\n                        onClick={()=> setPage(page + 1)}/>\r\n                    <Pagination.Last \r\n                        disabled={users.length < 5 ? true : false}\r\n                    />\r\n\r\n                </Pagination>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        users : state.userReducer.user.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(TablePaging);\r\n","E:\\ngoding\\test-mekar-frontend\\src\\containers\\home\\HomeContainer.js",[],"E:\\ngoding\\test-mekar-frontend\\src\\redux\\reducer\\user\\index.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":83,"column":8,"nodeType":"170","endLine":83,"endColumn":20,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":21},{"ruleId":"172","severity":1,"message":"176","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":23},{"ruleId":"164","replacedBy":"177"},{"ruleId":"166","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"164","replacedBy":"181"},{"ruleId":"166","replacedBy":"182"},{"ruleId":"168","severity":1,"message":"169","line":83,"column":8,"nodeType":"170","endLine":83,"endColumn":20,"suggestions":"183"},{"ruleId":"164","replacedBy":"184"},{"ruleId":"166","replacedBy":"185"},{"ruleId":"172","severity":1,"message":"186","line":23,"column":17,"nodeType":"174","messageId":"175","endLine":23,"endColumn":25},{"ruleId":"172","severity":1,"message":"187","line":24,"column":19,"nodeType":"174","messageId":"175","endLine":24,"endColumn":29},{"ruleId":"172","severity":1,"message":"188","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'prevEditedData', 'reset', and 'userInput'. Either include them or remove the dependency array. You can also do a functional update 'setUserInput(u => ...)' if you only need 'userInput' in the 'setUserInput' call.","ArrayExpression",["191"],"no-unused-vars","'HomeContainer' is defined but never used.","Identifier","unusedVar","'HeaderComponent' is defined but never used.",["189"],["190"],["189"],["190"],["189"],["190"],["192"],["189"],["190"],"'setLimit' is assigned a value but never used.","'setKeyword' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},"Update the dependencies array to be: [editedData, prevEditedData, reset, userInput]",{"range":"196","text":"197"},{"range":"198","text":"197"},[2385,2397],"[editedData, prevEditedData, reset, userInput]",[2352,2364]]